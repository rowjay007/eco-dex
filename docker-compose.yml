version: "3.8"

services:
  # User Service
  user-service:
    build: ./services/user-service
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis

  # Product Service
  product-service:
    build: ./services/product-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - REDIS_HOST=redis
    depends_on:
      - postgres
      - redis

  # Cart Service
  cart-service:
    build: ./services/cart-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - REDIS_HOST=redis
    depends_on:
      - redis

  # Order Service
  order-service:
    build: ./services/order-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      - postgres
      - kafka

  # Payment Service
  payment-service:
    build: ./services/payment-service
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
    depends_on:
      - postgres

  # Notification Service
  notification-service:
    build: ./services/notification-service
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=development
      - KAFKA_BROKERS=kafka:9092
      - REDIS_HOST=redis
    depends_on:
      - kafka
      - redis

  # Nginx API Gateway
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./infrastructure/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - user-service
      - product-service
      - cart-service
      - order-service
      - payment-service
      - notification-service

  # PostgreSQL Database
  postgres:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ecodex
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Redis Cache
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"

  # Kafka Message Broker
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  postgres_data:
